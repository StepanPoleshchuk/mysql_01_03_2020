-- 1) В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

START TRANSACTION;
INSERT INTO sample.users
  SELECT  -- будем добавлять в таблицу на последнее место
	  ((SELECT MAX(id) FROM sample.users)+1), -- находим на какое место добавлять
	  `name`,
	  birthday_at,
	  created_at,
	  updated_at
  FROM shop.users
  WHERE id = 1;
DELETE FROM shop.users WHERE id=1;
COMMIT;


-- 2) Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.

CREATE OR REPLACE VIEW task_2 AS
SELECT 
	shop.products.`name`,
	shop.catalogs.`name` as `catalog_name`
FROM shop.products
JOIN shop.catalogs ON shop.catalogs.id = shop.products.catalog_id;

-- SHOW TABLES FROM shop; -- можем увидеть представление как таблицу 
-- SELECT * FROM task_2; -- можем обратиться как к таблице


-- 1) Администрирование MySQL. Создайте двух пользователей которые имеют доступ к базе данных shop. Первому пользователю shop_read должны быть доступны только запросы на чтение данных, второму пользователю shop — любые операции в пределах базы данных shop.

CREATE USER 'shop_read'@'localhost' IDENTIFIED WITH sha256_password BY 'password';  -- зададим пассворд
GRANT SELECT ON shop.* TO 'shop_read'@'localhost';

CREATE USER 'shop'@'localhost' IDENTIFIED WITH sha256_password BY 'password';
GRANT ALL ON shop.* TO 'shop'@'localhost';


-- Хранимые процедуры и функции, триггеры.
-- 1) Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

DELIMITER //

CREATE FUNCTION hello () -- час искал ошибку синтаксиса(моя любимая ошибка)
RETURNS TINYTEXT DETERMINISTIC
BEGIN
	DECLARE `current_time` INT;
	SET `current_time` = HOUR(NOW());
	CASE
		WHEN `current_time` BETWEEN 0 AND 5 THEN RETURN "Доброй ночи";
		WHEN `current_time` BETWEEN 6 AND 11 THEN RETURN "Доброе утро";
		WHEN `current_time` BETWEEN 12 AND 17 THEN RETURN "Добрый день";
		WHEN `current_time` BETWEEN 18 AND 23 THEN RETURN "Добрый вечер";
	END CASE;
END//


-- 2) В таблице products есть два текстовых поля: name с названием товара и description с его описанием. Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.

DELIMITER //

CREATE TRIGGER NOT_NULL_INSERT BEFORE INSERT ON products -- на добавление
FOR EACH ROW
BEGIN
	IF NEW.`name` IS NULL AND NEW.`description` IS NULL THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'OR "name" OR "description" MUST BE NOT NULL';
	END IF;
END//

CREATE TRIGGER NOT_NULL_UPDATE BEFORE UPDATE ON products -- на обновление
FOR EACH ROW
BEGIN
	IF NEW.`name` IS NULL AND NEW.`description` IS NULL THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'OR "name" OR "description" MUST BE NOT NULL';
		SET NEW.`name` = OLD.`name`;
		SET NEW.`description` = OLD.`description`;
	END IF;
END//
