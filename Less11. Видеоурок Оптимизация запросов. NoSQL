-- 1) Оптимизация запросов. Создайте таблицу logs типа Archive. Пусть при каждом создании записи в таблицах users, catalogs и products в таблицу logs помещается время и дата создания записи, название таблицы, идентификатор первичного ключа и содержимое поля name.

-- создаем таблицу логс, используем движок archive
CREATE TABLE `shop`.`logs` (
  `created_at` DATETIME NOT NULL,
  `table_name` VARCHAR(45) NOT NULL,
  `id` INT UNSIGNED NOT NULL UNSIGNED,
  `name` VARCHAR(45) NOT NULL)
ENGINE = ARCHIVE;

-- создаем триггеры на добавление в logs после удачной вставки в таблицы users, catalogs и products
DROP TRIGGER IF EXISTS `shop`.`logs_users_AFTER_INSERT`;
DELIMITER $$
USE `shop`$$
CREATE TRIGGER `shop`.`logs_users_AFTER_INSERT` AFTER INSERT ON `users` FOR EACH ROW
BEGIN
	INSERT INTO `logs` (created_at, `table_name`, id, `name`)
	VALUES (NOW(), 'users', NEW.id, NEW.`name`);
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS `shop`.`logs_catalogs_AFTER_INSERT`;
DELIMITER $$
USE `shop`$$
CREATE TRIGGER `shop`.`logs_catalogs_AFTER_INSERT` AFTER INSERT ON `catalogs` FOR EACH ROW
BEGIN
	INSERT INTO `logs` (created_at, `table_name`, id, `name`)
	VALUES (NOW(), 'catalogs', NEW.id, NEW.`name`);
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS `shop`.`logs_products_AFTER_INSERT`;
DELIMITER $$
USE `shop`$$
CREATE TRIGGER `shop`.`logs_products_AFTER_INSERT` AFTER INSERT ON `products` FOR EACH ROW
BEGIN
	INSERT INTO `logs` (created_at, `table_name`, id, `name`)
	VALUES (NOW(), 'products', NEW.id, NEW.`name`);
END$$
DELIMITER ;


-- NoSQL
-- 1) В базе данных Redis подберите коллекцию для подсчета посещений с определенных IP-адресов.

-- По сути, нам нужен счетчик, он будет увеличиваться при каждом посещении с определенного ip
-- При использовании команды incr и остутствии ключа(в нашем случае 'определенного ip') ключ будет создан автоматически и ему подставится значение '1'
-- При дальнейшем использовании команды incr с имеющимся ключом (ip) его значение будет увеличено на 1
-- таким образом, все делается одной командой incr <ip>

MacBook-Pro-Stepan:~ stepanpoleshchuk$ brew install redis
MacBook-Pro-Stepan:~ stepanpoleshchuk$ brew services start redis 
MacBook-Pro-Stepan:~ stepanpoleshchuk$ redis-cli
127.0.0.1:6379> ping
PONG
127.0.0.1:6379> get 5.16.122.54
(nil)
127.0.0.1:6379> incr 5.16.122.54
(integer) 1
127.0.0.1:6379> get 5.16.122.54
"1"
127.0.0.1:6379> incr 5.16.122.54
(integer) 2
127.0.0.1:6379> get 5.16.122.54
"2"


-- 2) При помощи базы данных Redis решите задачу поиска имени пользователя по электронному адресу и наоборот, поиск электронного адреса пользователя по его имени.
-- Так как поиск осуществляется по ключу будем использовать и ИМЯ->ПОЧТА и ПОЧТА->ИМЯ 

127.0.0.1:6379> set stepan step@mail.ru
OK
127.0.0.1:6379> set step@mail.ru stepan
OK
127.0.0.1:6379> get stepan
"step@mail.ru"
127.0.0.1:6379> get step@mail.ru
"stepan"


-- 3) Организуйте хранение категорий и товарных позиций учебной базы данных shop в СУБД MongoDB.

use test
db.test.insertMany([
  {
    "Процессоры": [
      {
        "name": "Intel Core i3-8100",
        "description": "Процессор для настольных персональных компьютеров, основанных на платформе Intel",
        "price": "8000.00",
        "created_at": new Date(),
        "updated_at": new Date()
      },
      {
        "name": "AMD FX-8320",
        "description": "Процессор для настольных персональных компьютеров, основанных на платформе AMD",
        "price": "4000.00",
        "created_at": new Date(),
        "updated_at": new Date()
      },
      {
        "name": "AMD FX-8525E",
        "description": "Процессор для настольных персональных компьютеров, основанных на платформе AMD",
        "price": "4500.00",
        "created_at": new Date(),
        "updated_at": new Date()
      }
    ],
    "Материнские платы": [
      {
        "name": "MSI B250M GAMING PRO",
        "description": "Материнская плата MSI B250M GAMING PRO, B250, Socket 1151, DDR4, mATX",
        "price": "5060.00",
        "created_at": new Date(),
        "updated_at": new Date()
      },
      {
        "name": "ASUS ROG MAXIMUS X HERO",
        "description": "Материнская плата ASUS ROG MAXIMUS X HERO, Z370, Socket 1151-V2, DDR4, ATX",
        "price": "19310.00",
        "created_at": new Date(),
        "updated_at": new Date()
      },
      {
        "name": "Gigabyte H310M S2H",
        "description": "Материнская плата Gigabyte H310M S2H, H310, Socket 1151-V2, DDR4, mATX",
        "price": "4790.00",
        "created_at": new Date(),
        "updated_at": new Date()
      }
    ]
  }
])
