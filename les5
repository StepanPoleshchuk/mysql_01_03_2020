1.Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.(safemode включен)

update users set created_at=NOW(), updated_at=NOW() where id > 0;
select * from users;

2.Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.(делаем через функцию преобразования по маске)

UPDATE users SET updated_at = STR_TO_DATE(updated_at, "%d.%m.%Y %k:%i") where id>0;
UPDATE users SET created_at = STR_TO_DATE(created_at, "%d.%m.%Y %k:%i") where id>0;

3.В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех(через условие для сперва ненулевых)

SELECT id, value FROM storehouses_products ORDER BY
if (value = 0, 1, 0), value;


1)Агрегация. Подсчитайте средний возраст пользователей в таблице users.

SELECT avg (timestampdiff (year, birthday_at, now())) as 'AVG age' 
FROM shop_les5.users;


2)Агрегация. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.(склеим ДР в текущем году в формате DATE, посчитаем через COUNT) 
select 
	dayname(concat(year(now()), '-', substring(birthday_at,6,10))) as whatday,
	count(dayname(concat(year(now()), '-', substring(birthday_at,6,10)))) as 'count'
from users
group by whatday;
